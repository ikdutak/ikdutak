%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Tk Canvas Widget
%%Title: Window .!canvas
%%CreationDate: Sat May  7 11:27:24 2022
%%BoundingBox: -413 18 1026 775
%%Pages: 1
%%DocumentData: Clean7Bit
%%Orientation: Portrait
%%EndComments

%%BeginProlog
% This is a standard prolog for Postscript generated by Tk's canvas
% widget.
/CurrentEncoding [
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/exclam/quotedbl/numbersign/dollar/percent/ampersand/quotesingle
/parenleft/parenright/asterisk/plus/comma/hyphen/period/slash
/zero/one/two/three/four/five/six/seven
/eight/nine/colon/semicolon/less/equal/greater/question
/at/A/B/C/D/E/F/G
/H/I/J/K/L/M/N/O
/P/Q/R/S/T/U/V/W
/X/Y/Z/bracketleft/backslash/bracketright/asciicircum/underscore
/grave/a/b/c/d/e/f/g
/h/i/j/k/l/m/n/o
/p/q/r/s/t/u/v/w
/x/y/z/braceleft/bar/braceright/asciitilde/space
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/exclamdown/cent/sterling/currency/yen/brokenbar/section
/dieresis/copyright/ordfeminine/guillemotleft/logicalnot/hyphen/registered/macron
/degree/plusminus/twosuperior/threesuperior/acute/mu/paragraph/periodcentered
/cedilla/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters/questiondown
/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply
/Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls
/agrave/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla
/egrave/eacute/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis
/eth/ntilde/ograve/oacute/ocircumflex/otilde/odieresis/divide
/oslash/ugrave/uacute/ucircumflex/udieresis/yacute/thorn/ydieresis
] def
50 dict begin
/baseline 0 def
/stipimage 0 def
/height 0 def
/justify 0 def
/lineLength 0 def
/spacing 0 def
/stipple 0 def
/strings 0 def
/xoffset 0 def
/yoffset 0 def
/tmpstip null def
/baselineSampler ( TXygqPZ) def
baselineSampler 0 196 put
/cstringshow {{ dup type /stringtype eq { show } { glyphshow } ifelse } forall } bind def
/cstringwidth {0 exch 0 exch { dup type /stringtype eq { stringwidth } { currentfont /Encoding get exch 1 exch put (\001) stringwidth } ifelse exch 3 1 roll add 3 1 roll add exch } forall } bind def
/ISOEncode {dup length dict begin {1 index /FID ne {def} {pop pop} ifelse} forall /Encoding CurrentEncoding def currentdict end /Temporary exch definefont } bind def
/StrokeClip {{strokepath} stopped { (This Postscript printer gets limitcheck overflows when) = (stippling dashed lines;  lines will be printed solid instead.) = [] 0 setdash strokepath} if clip } bind def
/EvenPixels {dup 0 matrix currentmatrix dtransform dup mul exch dup mul add sqrt dup round dup 1 lt {pop 1} if exch div mul } bind def
/StippleFill {/tmpstip 1 index def 1 EvenPixels dup scale pathbbox 4 2 roll 5 index div dup 0 lt {1 sub} if cvi 5 index mul 4 1 roll 6 index div dup 0 lt {1 sub} if cvi 6 index mul 3 2 roll 6 index exch { 2 index 5 index 3 index { gsave 1 index exch translate 5 index 5 index true matrix tmpstip imagemask grestore } for pop } for pop pop pop pop pop } bind def
/AdjustColor {CL 2 lt { currentgray CL 0 eq { .5 lt {0} {1} ifelse } if setgray } if } bind def
/DrawText {/stipple exch def /justify exch def /yoffset exch def /xoffset exch def /spacing exch def /strings exch def /lineLength 0 def strings { cstringwidth pop dup lineLength gt {/lineLength exch def} {pop} ifelse newpath } forall 0 0 moveto baselineSampler false charpath pathbbox dup /baseline exch def exch pop exch sub /height exch def pop newpath translate rotate lineLength xoffset mul strings length 1 sub spacing mul height add yoffset mul translate justify lineLength mul baseline neg translate strings { dup cstringwidth pop justify neg mul 0 moveto stipple { gsave /char (X) def { dup type /stringtype eq { { char 0 3 -1 roll put currentpoint gsave char true charpath clip StippleText grestore char stringwidth translate moveto } forall } { currentfont /Encoding get exch 1 exch put currentpoint gsave (\001) true charpath clip StippleText grestore (\001) stringwidth translate moveto } ifelse } forall grestore } {cstringshow} ifelse 0 spacing neg translate } forall } bind def
/TkPhotoColor {gsave 32 dict begin /tinteger exch def /transparent 1 string def transparent 0 tinteger put /olddict exch def olddict /DataSource get dup type /filetype ne { olddict /DataSource 3 -1 roll 0 () /SubFileDecode filter put } { pop } ifelse /newdict olddict maxlength dict def olddict newdict copy pop /w newdict /Width get def /crpp newdict /Decode get length 2 idiv def /str w string def /pix w crpp mul string def /substrlen 2 w log 2 log div floor exp cvi def /substrs [ { substrlen string 0 1 substrlen 1 sub { 1 index exch tinteger put } for /substrlen substrlen 2 idiv def substrlen 0 eq {exit} if } loop ] def /h newdict /Height get def 1 w div 1 h div matrix scale olddict /ImageMatrix get exch matrix concatmatrix matrix invertmatrix concat newdict /Height 1 put newdict /DataSource pix put /mat [w 0 0 h 0 0] def newdict /ImageMatrix mat put 0 1 h 1 sub { mat 5 3 -1 roll neg put olddict /DataSource get str readstring pop pop /tail str def /x 0 def olddict /DataSource get pix readstring pop pop { tail transparent search dup /done exch not def {exch pop exch pop} if /w1 exch length def w1 0 ne { newdict /DataSource pix x crpp mul w1 crpp mul getinterval put newdict /Width w1 put mat 4 x neg put /x x w1 add def newdict image /tail tail w1 tail length w1 sub getinterval def } if done {exit} if tail substrs { anchorsearch {pop} if } forall /tail exch def tail length 0 eq {exit} if /x w tail length sub def } loop } for end grestore } bind def
/TkPhotoMono {gsave 32 dict begin /dummyInteger exch def /olddict exch def olddict /DataSource get dup type /filetype ne { olddict /DataSource 3 -1 roll 0 () /SubFileDecode filter put } { pop } ifelse /newdict olddict maxlength dict def olddict newdict copy pop /w newdict /Width get def /pix w 7 add 8 idiv string def /h newdict /Height get def 1 w div 1 h div matrix scale olddict /ImageMatrix get exch matrix concatmatrix matrix invertmatrix concat newdict /Height 1 put newdict /DataSource pix put /mat [w 0 0 h 0 0] def newdict /ImageMatrix mat put 0 1 h 1 sub { mat 5 3 -1 roll neg put 0.000 0.000 0.000 setrgbcolor olddict /DataSource get pix readstring pop pop newdict /DataSource pix put newdict imagemask 1.000 1.000 1.000 setrgbcolor olddict /DataSource get pix readstring pop pop newdict /DataSource pix put newdict imagemask } for end grestore } bind def
%%EndProlog
%%BeginSetup
/CL 2 def
%%EndSetup

%%Page: 1 1
save
306.0 396.0 translate
0.75 0.75 scale
3 -503 translate
-962 1007 moveto 956 1007 lineto 956 0 lineto -962 0 lineto closepath clip newpath
gsave
grestore
gsave
grestore
gsave
grestore
gsave
grestore
gsave
290 501 moveto
290 501 lineto
287.871637389448 534.059484539555 lineto
281.533886473173 566.511448432696 lineto
271.127451598413 597.763809020504 lineto
256.88252403789 627.254913536922 lineto
239.112442279119 654.467652228848 lineto
218.205080756888 678.942286340599 lineto
194.612221757109 700.287623140941 lineto
168.837224613819 718.190219708407 lineto
141.42135623731 732.42135623731 lineto
112.929185947284 742.841586394894 lineto
83.933474370899 749.40274472853 lineto
55 752.147367097487 lineto
26.6727674763513 751.205557288038 lineto
-0.539971215574264 746.78940902897 lineto
-26.1784773200954 739.185165257814 lineto
-49.8427003373457 728.743363501752 lineto
-71.2015492215671 715.867275608373 lineto
-90 701 lineto
-106.06384632063 684.610603628325 lineto
-119.301971404118 667.179737703131 lineto
-129.706095361104 649.185165257814 lineto
-137.348028545842 631.087639285393 lineto
-142.374537219928 613.317557526622 lineto
-145 596.262794416288 lineto
-145.497100169519 580.258072987067 lineto
-144.185857927332 565.576190852697 lineto
-141.421356237309 552.42135623731 lineto
-137.580552633772 540.924824166209 lineto
-133.048595958488 531.142951399478 lineto
-128.205080756888 523.057713659401 lineto
-123.410672535541 516.579652467432 lineto
-118.994524276474 511.553143793345 lineto
-115.242878917214 507.763809020504 lineto
-112.38921473171 504.947822634076 lineto
-110.60624184725 502.802812559508 lineto
-110 501 lineto
-110.60624184725 499.197187440492 lineto
-112.38921473171 497.052177365924 lineto
-115.242878917214 494.236190979496 lineto
-118.994524276474 490.446856206655 lineto
-123.410672535542 485.420347532568 lineto
1 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
-123.410672535542 485.420347532568 moveto
-128.205080756888 478.942286340599 lineto
-133.048595958488 470.857048600523 lineto
-137.580552633772 461.075175833791 lineto
-141.42135623731 449.57864376269 lineto
-144.185857927332 436.423809147303 lineto
-145.49710016952 421.741927012933 lineto
-145 405.737205583712 lineto
-142.374537219929 388.682442473378 lineto
-137.348028545842 370.912360714607 lineto
-129.706095361104 352.814834742186 lineto
-119.301971404118 334.820262296868 lineto
-106.06384632063 317.389396371674 lineto
-90 301 lineto
-71.2015492215671 286.132724391627 lineto
-49.8427003373457 273.256636498248 lineto
-26.1784773200954 262.814834742186 lineto
-0.539971215574081 255.21059097103 lineto
26.6727674763515 250.794442711962 lineto
55.0000000000002 249.852632902513 lineto
83.9334743708992 252.59725527147 lineto
112.929185947284 259.158413605106 lineto
141.42135623731 269.57864376269 lineto
168.837224613819 283.809780291593 lineto
194.612221757109 301.712376859059 lineto
218.205080756888 323.0577136594 lineto
239.112442279119 347.532347771152 lineto
256.88252403789 374.745086463078 lineto
271.127451598413 404.236190979496 lineto
281.533886473173 435.488551567304 lineto
287.871637389448 467.940515460445 lineto
290 501 lineto
1 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
grestore
gsave
grestore
restore showpage

%%Trailer
end
%%EOF
